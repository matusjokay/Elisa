"""
Django settings for elisa project.

Generated by 'django-admin startproject' using Django 1.10.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import datetime

from corsheaders.defaults import default_headers
from decouple import config, Csv

# apps synced with created tenants
TENANT_APPS = [
    'django.contrib.contenttypes',
    'timetables',
    'school',
    'requirements'
]

# apps synced with public schema
SHARED_APPS = [
    'django_tenants',
    'fei',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles'
]

# apps neeeded in application that not contains models
ELISA_APPS = [
    'django_filters',
    'rest_framework',
    # 'rest_framework_simplejwt.token_blacklist',
    'drf_yasg',
    'django_extensions',
    'django_python3_ldap',
    'sslserver',
    'corsheaders',
    'mptt',
    'import_export',
    'authentication',
    'fei_importexport',
]

INSTALLED_APPS = list(set(ELISA_APPS + SHARED_APPS + TENANT_APPS))

TENANT_MODEL = "fei.Version"
TENANT_DOMAIN_MODEL = "fei.Domain"

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool, default=False)

ALLOWED_HOSTS = config('ALLOWED_HOSTS', cast=Csv())

# Application definition
MAIN_TIMETABLE_CREATOR = 'MAIN_TIMETABLE_CREATOR'
LOCAL_TIMETABLE_CREATOR = 'LOCAL_TIMETABLE_CREATOR'
TEACHER = 'TEACHER'
STUDENT = 'STUDENT'
GROUPS = [MAIN_TIMETABLE_CREATOR, LOCAL_TIMETABLE_CREATOR, TEACHER, STUDENT]

ACTIVITY_CATEGORIES = [
    {
        'name_sk': 'Prednáška',
        'name_en': 'Lecture',
        'color': '#49cad8',
    }, {
        'name_sk': 'Cvičenie',
        'name_en': 'Practice',
        'color': '#6fe273',
    }, {
        'name_sk': 'Laboratórne cvičenie',
        'name_en': 'Lab',
        'color': '#4876d8'
    }
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'authentication.middleware.HttpsMiddleware',
    'elisa.middleware.VersionMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    # 'DEFAULT_PERMISSION_CLASSES':
    #     ('rest_framework.permissions.IsAuthenticated',),
    'DEFAULT_PERMISSION_CLASSES':
        ('rest_framework.permissions.AllowAny',),
    'DEFAULT_AUTHENTICATION_CLASSES':
        ('rest_framework_simplejwt.authentication.JWTAuthentication',),
    'DEFAULT_FILTER_BACKENDS':
        ('django_filters.rest_framework.DjangoFilterBackend',),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',),
    # 'PAGE_SIZE': 10
}

AUTHENTICATION_BACKENDS = ("django_python3_ldap.auth.LDAPBackend",)
# settings and credentials for development auth
# DEV_LOGINS = ['xmaksin']
# DEV_PASSWORD = 'pbkdf2_sha256$30000$Vo0VlMnkR4Bk$8uT48HJVfO8ar7vcK59jJJgAOlVJJ0iZmM5QlprEHME='
# AUTHENTICATION_BACKENDS = ('authentication.backend.SettingsBackend',)

# The URL of the LDAP server.
LDAP_AUTH_URL = config('LDAP_AUTH_URL')
# Initiate TLS on connection.
LDAP_AUTH_USE_TLS = True
# The LDAP search base for looking up users.
LDAP_AUTH_SEARCH_BASE = config('LDAP_AUTH_SEARCH_BASE')
# A tuple of django model fields used to uniquely identify a user.
LDAP_AUTH_USER_LOOKUP_FIELDS = ("username",)

# User model fields mapped to the LDAP
# attributes that represent them.
LDAP_AUTH_USER_FIELDS = {
    "id": "uisId",
    "username": "uid",
    "first_name": "givenName",
    "last_name": "sn",
    # "email": "mail",
}

SIMPLE_JWT = {
    # just for testing purposes the validity time has been lowered
    'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=20),
    'REFRESH_TOKEN_LIFETIME': datetime.timedelta(hours=1),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    # 'ACCESS_TOKEN_LIFETIME': datetime.timedelta(minutes=30),
    # 'REFRESH_TOKEN_LIFETIME': datetime.timedelta(days=1),
}

GRAPH_MODELS = {
    'all_applications': True,
    'group_models': True,
}

SWAGGER_SETTINGS = {
    'LOGIN_URL': 'rest_framework:login',
    'LOGOUT_URL': 'rest_framework:logout',
    'USE_SESSION_AUTH': False,
    'SHOW_REQUEST_HEADERS': True,
    'JSON_EDITOR': True,
    'SECURITY_DEFINITIONS': {
        'api_key': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization',
        }
    }
}

CORS_ORIGIN_ALLOW_ALL = False
CORS_ORIGIN_WHITELIST = [
    'localhost:4200',
    '127.0.0.1:4200'
]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_HEADERS = default_headers + (
    'cache-control',
    'Timetable-Version')

CSRF_COOKIE_HTTPONLY = True
CSRF_HEADER_NAME = 'Authorization'
CSRF_COOKIE_NAME = 'XSRF-TOKEN'

CSRF_TRUSTED_ORIGINS = [
    'localhost:4200',
    '127.0.0.1:4200'
]

ROOT_URLCONF = 'elisa.urls'

SECURE_SSL_REDIRECT = True

TEMPLATES = [{
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [],
    'APP_DIRS': True,
    'OPTIONS': {
        'context_processors': [
            'django.template.context_processors.debug',
            'django.template.context_processors.request',
            'django.contrib.auth.context_processors.auth',
            'django.contrib.messages.context_processors.messages',
        ],
    },
}, ]

WSGI_APPLICATION = 'elisa.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django_tenants.postgresql_backend',
        'NAME': 'elisa',
        'USER': 'elisa',
        'PASSWORD': 'secret',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    },
    'import': {
        'ENGINE': 'django.db.backends.oracle',
        'NAME': config('DB_IMPORT_NAME'),
        'USER': config('DB_IMPORT_USER'),
        'PASSWORD': config('DB_IMPORT_PASSWORD'),
        # 'HOST': 'db-new.is.stuba.sk',
        'HOST': config('DB_IMPORT_HOST'),
        'PORT': config('DB_IMPORT_PORT', default='1521'),
    }
}

DATABASE_ROUTERS = (
     'django_tenants.routers.TenantSyncRouter',
)

AUTH_USER_MODEL = 'fei.AppUser'

# set login and logout url
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'home'

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME':
        'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME':
        'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Bratislava'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
        },
    },
    "loggers": {
        "django_python3_ldap": {
            "handlers": ["console"],
            "level": "INFO",
        },
    },
}
